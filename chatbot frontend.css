<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Minu - Your AI Assistant</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .chat-container {
            width: 90%;
            max-width: 600px;
            height: 80vh;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            display: flex;
            flex-direction: column;
            overflow: hidden;
            animation: slideIn 0.5s ease-out;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .chat-header {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 20px;
            text-align: center;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
        }

        .chatbot-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: 3px solid rgba(255,255,255,0.3);
            background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 50%, #fecfef 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            animation: avatarGlow 3s ease-in-out infinite;
            position: relative;
            overflow: hidden;
        }

        .avatar-face {
            position: absolute;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: #333;
        }

        .avatar-hair {
            position: absolute;
            top: 8px;
            width: 40px;
            height: 20px;
            background: #8B4513;
            border-radius: 50px 50px 20px 20px;
            z-index: 1;
        }

        .avatar-hair::before {
            content: '';
            position: absolute;
            top: 5px;
            left: -8px;
            width: 20px;
            height: 25px;
            background: #8B4513;
            border-radius: 50px 20px 30px 50px;
        }

        .avatar-hair::after {
            content: '';
            position: absolute;
            top: 5px;
            right: -8px;
            width: 20px;
            height: 25px;
            background: #8B4513;
            border-radius: 20px 50px 50px 30px;
        }

        .avatar-face-features {
            margin-top: 15px;
            z-index: 2;
        }

        .avatar-eyes {
            display: flex;
            gap: 8px;
            margin-bottom: 8px;
        }

        .avatar-eye {
            width: 6px;
            height: 6px;
            background: #333;
            border-radius: 50%;
            animation: blink 4s infinite;
        }

        .avatar-nose {
            width: 2px;
            height: 8px;
            background: #d4a574;
            margin: 0 auto 4px;
            border-radius: 50px;
        }

        .avatar-mouth {
            width: 8px;
            height: 4px;
            border: 1px solid #ff6b9d;
            border-top: none;
            border-radius: 0 0 8px 8px;
        }

        @keyframes avatarGlow {
            0%, 100% { box-shadow: 0 0 20px rgba(255,255,255,0.3); }
            50% { box-shadow: 0 0 30px rgba(255,255,255,0.6); }
        }

        @keyframes blink {
            0%, 90%, 100% { transform: scaleY(1); }
            95% { transform: scaleY(0.1); }
        }

        .chat-info {
            flex: 1;
        }

        .chat-header h1 {
            font-size: 24px;
            margin-bottom: 5px;
        }

        .chat-header p {
            opacity: 0.9;
            font-size: 14px;
        }

        .status-indicator {
            position: absolute;
            top: 20px;
            right: 20px;
            width: 12px;
            height: 12px;
            background: #4CAF50;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        .chat-messages {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
            background: #f8f9fa;
        }

        .message {
            margin-bottom: 15px;
            animation: fadeIn 0.3s ease-in;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .message.user {
            text-align: right;
        }

        .message.bot {
            text-align: left;
        }

        .message-bubble {
            display: inline-block;
            max-width: 80%;
            padding: 12px 16px;
            border-radius: 18px;
            font-size: 14px;
            line-height: 1.4;
        }

        .message.user .message-bubble {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border-bottom-right-radius: 5px;
        }

        .message.bot .message-bubble {
            background: #e9ecef;
            color: #333;
            border-bottom-left-radius: 5px;
        }

        .chat-input-container {
            padding: 20px;
            background: white;
            border-top: 1px solid #e9ecef;
            display: flex;
            gap: 10px;
        }

        .chat-input {
            flex: 1;
            padding: 12px 16px;
            border: 2px solid #e9ecef;
            border-radius: 25px;
            font-size: 14px;
            outline: none;
            transition: border-color 0.3s ease;
        }

        .chat-input:focus {
            border-color: #667eea;
        }

        .send-button {
            padding: 12px 20px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: transform 0.2s ease;
        }

        .send-button:hover {
            transform: scale(1.05);
        }

        .send-button:active {
            transform: scale(0.95);
        }

        .typing-indicator {
            display: none;
            text-align: left;
            margin-bottom: 15px;
        }

        .typing-bubble {
            display: inline-block;
            background: #e9ecef;
            padding: 16px;
            border-radius: 18px;
            border-bottom-left-radius: 5px;
        }

        .typing-dots {
            display: flex;
            gap: 4px;
        }

        .typing-dot {
            width: 8px;
            height: 8px;
            background: #999;
            border-radius: 50%;
            animation: typing 1.4s infinite ease-in-out;
        }

        .typing-dot:nth-child(1) { animation-delay: -0.32s; }
        .typing-dot:nth-child(2) { animation-delay: -0.16s; }

        @keyframes typing {
            0%, 80%, 100% { transform: scale(0.8); opacity: 0.5; }
            40% { transform: scale(1); opacity: 1; }
        }

        .welcome-message {
            text-align: center;
            color: #666;
            margin: 40px 0;
            font-style: italic;
        }

        /* Scrollbar styling */
        .chat-messages::-webkit-scrollbar {
            width: 6px;
        }

        .chat-messages::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        .chat-messages::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 3px;
        }

        .chat-messages::-webkit-scrollbar-thumb:hover {
            background: #555;
        }

        /* Mobile responsiveness */
        @media (max-width: 480px) {
            .chat-container {
                width: 95%;
                height: 90vh;
                border-radius: 15px;
            }
            
            .chat-header {
                padding: 15px;
            }
            
            .chat-header h1 {
                font-size: 20px;
            }
            
            .chat-messages {
                padding: 15px;
            }
            
            .chat-input-container {
                padding: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            <div class="status-indicator"></div>
            <div class="chatbot-avatar">
                <div class="avatar-hair"></div>
                <div class="avatar-face-features">
                    <div class="avatar-eyes">
                        <div class="avatar-eye"></div>
                        <div class="avatar-eye"></div>
                    </div>
                    <div class="avatar-nose"></div>
                    <div class="avatar-mouth"></div>
                </div>
            </div>
            <div class="chat-info">
                <h1>💃 Minu</h1>
                <p>Your gorgeous AI assistant</p>
            </div>
        </div>
        
        <div class="chat-messages" id="chatMessages">
            <div class="welcome-message">
                👋 Hi! I'm Minu, your gorgeous AI assistant. How can I help you today?
            </div>
        </div>
        
        <div class="typing-indicator" id="typingIndicator">
            <div class="typing-bubble">
                <div class="typing-dots">
                    <div class="typing-dot"></div>
                    <div class="typing-dot"></div>
                    <div class="typing-dot"></div>
                </div>
            </div>
        </div>
        
        <div class="chat-input-container">
            <input type="text" class="chat-input" id="chatInput" placeholder="Type your message here..." autocomplete="off">
            <button class="send-button" id="sendButton">Send</button>
        </div>
    </div>

    <script>
        // Get DOM elements
        const chatMessages = document.getElementById('chatMessages');
        const chatInput = document.getElementById('chatInput');
        const sendButton = document.getElementById('sendButton');
        const typingIndicator = document.getElementById('typingIndicator');

        // Configuration - Replace with your backend URL
        const API_URL = 'http://localhost:5000/api/chat'; // Change this to your Python backend URL

        // Sample responses for demo (remove when connecting to backend)
        const responses = [
            "Hi there! How can I help you today?",
            "That's interesting! Tell me more.",
            "I understand what you're saying.",
            "Thanks for sharing that with me!",
            "Is there anything else I can help you with?",
            "I'm here to assist you!",
            "That sounds great!",
            "I'm learning from our conversation."
        ];

        // Function to add a message to the chat
        function addMessage(message, isUser = false) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isUser ? 'user' : 'bot'}`;
            
            const bubbleDiv = document.createElement('div');
            bubbleDiv.className = 'message-bubble';
            bubbleDiv.textContent = message;
            
            messageDiv.appendChild(bubbleDiv);
            chatMessages.appendChild(messageDiv);
            
            // Scroll to bottom
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Function to show typing indicator
        function showTyping() {
            typingIndicator.style.display = 'block';
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Function to hide typing indicator
        function hideTyping() {
            typingIndicator.style.display = 'none';
        }

        // Function to call your Python backend API
        async function callBackendAPI(userMessage) {
            try {
                const response = await fetch(API_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        message: userMessage,
                        timestamp: new Date().toISOString()
                    })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                return data.response || data.message || "I'm sorry, I couldn't process that.";
            } catch (error) {
                console.error('Backend API error:', error);
                throw error;
            }
        }

        // Function to get bot response (demo version - replace with backend call)
        function getBotResponse(userMessage) {
            return new Promise(async (resolve, reject) => {
                showTyping();
                
                try {
                    // Try to call backend API first
                    // Uncomment the next line when your backend is ready:
                    // const response = await callBackendAPI(userMessage);
                    
                    // Demo response logic (remove when backend is connected)
                    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 1000));
                    
                    const lowerMessage = userMessage.toLowerCase();
                    let response;
                    
                    if (lowerMessage.includes('hello') || lowerMessage.includes('hi')) {
                        response = "Hello! Nice to meet you! How are you doing today?";
                    } else if (lowerMessage.includes('bye') || lowerMessage.includes('goodbye')) {
                        response = "Goodbye! It was great talking with you. Have a wonderful day!";
                    } else if (lowerMessage.includes('how are you')) {
                        response = "I'm doing great, thank you for asking! I'm here and ready to help you.";
                    } else if (lowerMessage.includes('name')) {
                        response = "My name is Minu! I'm your gorgeous AI assistant.";
                    } else {
                        response = responses[Math.floor(Math.random() * responses.length)];
                    }
                    
                    hideTyping();
                    resolve(response);
                    
                } catch (error) {
                    hideTyping();
                    reject(error);
                }
            });
        }

        // Function to send message
        async function sendMessage() {
            const message = chatInput.value.trim();
            if (message === '') return;
            
            // Add user message
            addMessage(message, true);
            chatInput.value = '';
            
            // Get bot response
            try {
                const response = await getBotResponse(message);
                addMessage(response, false);
            } catch (error) {
                addMessage("Sorry, I'm having trouble responding right now. Please try again!", false);
            }
        }

        // Event listeners
        sendButton.addEventListener('click', sendMessage);
        
        chatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        // Focus on input when page loads
        window.addEventListener('load', () => {
            chatInput.focus();
        });

        // Add demo message
        setTimeout(() => {
            addMessage("Welcome to Minu! I'm ready to chat with you. Try saying hello!", false);
        }, 500);
    </script>
</body>
</html>